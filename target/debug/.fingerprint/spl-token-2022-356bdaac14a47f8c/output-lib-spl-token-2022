{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":25222,"byte_end":25232,"line_start":624,"line_end":624,"column_start":32,"column_end":42,"is_primary":false,"text":[{"text":"        verify_pubkey_validity(proof_data),","highlight_start":32,"highlight_end":42}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":25199,"byte_end":25221,"line_start":624,"line_end":624,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"        verify_pubkey_validity(proof_data),","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":6322,"byte_end":6344,"line_start":206,"line_end":206,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"pub fn verify_pubkey_validity(","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":25221,"byte_end":25233,"line_start":624,"line_end":624,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"        verify_pubkey_validity(proof_data),","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:624:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m624\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_pubkey_validity(proof_data),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:206:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_pubkey_validity(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m624\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_pubkey_validity\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":27437,"byte_end":27447,"line_start":698,"line_end":698,"column_start":30,"column_end":40,"is_primary":false,"text":[{"text":"        verify_close_account(proof_data),","highlight_start":30,"highlight_end":40}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":27416,"byte_end":27436,"line_start":698,"line_end":698,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        verify_close_account(proof_data),","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":4911,"byte_end":4931,"line_start":165,"line_end":165,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn verify_close_account(","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":27436,"byte_end":27448,"line_start":698,"line_end":698,"column_start":29,"column_end":41,"is_primary":true,"text":[{"text":"        verify_close_account(proof_data),","highlight_start":29,"highlight_end":41}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:698:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_close_account(proof_data),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:165:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_close_account(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_close_account\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":30531,"byte_end":30541,"line_start":803,"line_end":803,"column_start":25,"column_end":35,"is_primary":false,"text":[{"text":"        verify_withdraw(proof_data),","highlight_start":25,"highlight_end":35}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":30515,"byte_end":30530,"line_start":803,"line_end":803,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        verify_withdraw(proof_data),","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":5183,"byte_end":5198,"line_start":173,"line_end":173,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn verify_withdraw(","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":30530,"byte_end":30542,"line_start":803,"line_end":803,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"        verify_withdraw(proof_data),","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:803:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m803\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_withdraw(proof_data),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:173:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_withdraw(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m803\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_withdraw\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":32738,"byte_end":32748,"line_start":870,"line_end":870,"column_start":25,"column_end":35,"is_primary":false,"text":[{"text":"        verify_transfer(proof_data),","highlight_start":25,"highlight_end":35}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":32722,"byte_end":32737,"line_start":870,"line_end":870,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        verify_transfer(proof_data),","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":5768,"byte_end":5783,"line_start":190,"line_end":190,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn verify_transfer(","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":32737,"byte_end":32749,"line_start":870,"line_end":870,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"        verify_transfer(proof_data),","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:870:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m870\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_transfer(proof_data),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:190:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_transfer(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m870\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_transfer\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":33599,"byte_end":33609,"line_start":898,"line_end":898,"column_start":34,"column_end":44,"is_primary":false,"text":[{"text":"        verify_transfer_with_fee(proof_data),","highlight_start":34,"highlight_end":44}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":33574,"byte_end":33598,"line_start":898,"line_end":898,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        verify_transfer_with_fee(proof_data),","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":6034,"byte_end":6058,"line_start":198,"line_end":198,"column_start":8,"column_end":32,"is_primary":true,"text":[{"text":"pub fn verify_transfer_with_fee(","highlight_start":8,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":33598,"byte_end":33610,"line_start":898,"line_end":898,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"        verify_transfer_with_fee(proof_data),","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:898:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_transfer_with_fee(proof_data),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:198:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_transfer_with_fee(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_transfer_with_fee\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":39749,"byte_end":39759,"line_start":1097,"line_end":1097,"column_start":41,"column_end":51,"is_primary":false,"text":[{"text":"        verify_withdraw_withheld_tokens(proof_data),","highlight_start":41,"highlight_end":51}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":39717,"byte_end":39748,"line_start":1097,"line_end":1097,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"        verify_withdraw_withheld_tokens(proof_data),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":5456,"byte_end":5487,"line_start":181,"line_end":181,"column_start":8,"column_end":39,"is_primary":true,"text":[{"text":"pub fn verify_withdraw_withheld_tokens(","highlight_start":8,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":39748,"byte_end":39760,"line_start":1097,"line_end":1097,"column_start":40,"column_end":52,"is_primary":true,"text":[{"text":"        verify_withdraw_withheld_tokens(proof_data),","highlight_start":40,"highlight_end":52}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:1097:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1097\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_withdraw_withheld_tokens(proof_data),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:181:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_withdraw_withheld_tokens(\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1097\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_withdraw_withheld_tokens\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":41844,"byte_end":41854,"line_start":1163,"line_end":1163,"column_start":41,"column_end":51,"is_primary":false,"text":[{"text":"        verify_withdraw_withheld_tokens(proof_data),","highlight_start":41,"highlight_end":51}],"label":"an argument of type `Option<ContextStateInfo<'_>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":41812,"byte_end":41843,"line_start":1163,"line_end":1163,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"        verify_withdraw_withheld_tokens(proof_data),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs","byte_start":5456,"byte_end":5487,"line_start":181,"line_end":181,"column_start":8,"column_end":39,"is_primary":true,"text":[{"text":"pub fn verify_withdraw_withheld_tokens(","highlight_start":8,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs","byte_start":41843,"byte_end":41855,"line_start":1163,"line_end":1163,"column_start":40,"column_end":52,"is_primary":true,"text":[{"text":"        verify_withdraw_withheld_tokens(proof_data),","highlight_start":40,"highlight_end":52}],"label":null,"suggested_replacement":"(/* Option<ContextStateInfo<'_>> */, proof_data)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/instruction.rs:1163:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        verify_withdraw_withheld_tokens(proof_data),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `Option<ContextStateInfo<'_>>` is missing\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-zk-token-sdk-1.14.18/src/zk_token_proof_instruction.rs:181:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn verify_withdraw_withheld_tokens(\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        verify_withdraw_withheld_tokens\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<ContextStateInfo<'_>> */, proof_data)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"no variant or associated item named `decode_type` found for enum `ProofInstruction` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":1351,"byte_end":1362,"line_start":41,"line_end":41,"column_start":30,"column_end":41,"is_primary":true,"text":[{"text":"        || ProofInstruction::decode_type(&instruction.data) != Some(expected)","highlight_start":30,"highlight_end":41}],"label":"variant or associated item not found in `ProofInstruction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `decode_type` found for enum `ProofInstruction` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:41:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        || ProofInstruction::decode_type(&instruction.data) != Some(expected)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ProofInstruction`\u001b[0m\n\n"}
{"message":"no variant or associated item named `decode_data` found for enum `ProofInstruction` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":1539,"byte_end":1550,"line_start":47,"line_end":47,"column_start":23,"column_end":34,"is_primary":true,"text":[{"text":"    ProofInstruction::decode_data(&instruction.data).ok_or(ProgramError::InvalidInstructionData)","highlight_start":23,"highlight_end":34}],"label":"variant or associated item not found in `ProofInstruction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `decode_data` found for enum `ProofInstruction` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:47:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ProofInstruction::decode_data(&instruction.data).ok_or(ProgramError::InvalidInstructionData)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ProofInstruction`\u001b[0m\n\n"}
{"message":"no field `pubkey` on type `&solana_zk_token_sdk::instruction::PubkeyValidityData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":6390,"byte_end":6396,"line_start":171,"line_end":171,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"    if proof_data.pubkey != *encryption_pubkey {","highlight_start":19,"highlight_end":25}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":6390,"byte_end":6390,"line_start":171,"line_end":171,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.pubkey != *encryption_pubkey {","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `pubkey` on type `&solana_zk_token_sdk::instruction::PubkeyValidityData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:171:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.pubkey != *encryption_pubkey {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mpubkey != *encryption_pubkey {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `ciphertext` on type `&solana_zk_token_sdk::instruction::CloseAccountData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":11990,"byte_end":12000,"line_start":298,"line_end":298,"column_start":70,"column_end":80,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.available_balance != proof_data.ciphertext {","highlight_start":70,"highlight_end":80}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":11990,"byte_end":11990,"line_start":298,"line_end":298,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.available_balance != proof_data.ciphertext {","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `ciphertext` on type `&solana_zk_token_sdk::instruction::CloseAccountData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:298:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if confidential_transfer_account.available_balance != proof_data.ciphertext {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if confidential_transfer_account.available_balance != proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mciphertext {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `pubkey` on type `&solana_zk_token_sdk::instruction::CloseAccountData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":12181,"byte_end":12187,"line_start":303,"line_end":303,"column_start":70,"column_end":76,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.encryption_pubkey != proof_data.pubkey {","highlight_start":70,"highlight_end":76}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":12181,"byte_end":12181,"line_start":303,"line_end":303,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.encryption_pubkey != proof_data.pubkey {","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `pubkey` on type `&solana_zk_token_sdk::instruction::CloseAccountData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:303:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if confidential_transfer_account.encryption_pubkey != proof_data.pubkey {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if confidential_transfer_account.encryption_pubkey != proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mpubkey {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":17894,"byte_end":17900,"line_start":466,"line_end":466,"column_start":70,"column_end":76,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.encryption_pubkey != proof_data.pubkey {","highlight_start":70,"highlight_end":76}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":17894,"byte_end":17894,"line_start":466,"line_end":466,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.encryption_pubkey != proof_data.pubkey {","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:466:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m466\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if confidential_transfer_account.encryption_pubkey != proof_data.pubkey {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m466\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if confidential_transfer_account.encryption_pubkey != proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mpubkey {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `final_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":18260,"byte_end":18276,"line_start":474,"line_end":474,"column_start":70,"column_end":86,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.available_balance != proof_data.final_ciphertext {","highlight_start":70,"highlight_end":86}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":18260,"byte_end":18260,"line_start":474,"line_end":474,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"    if confidential_transfer_account.available_balance != proof_data.final_ciphertext {","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `final_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:474:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if confidential_transfer_account.available_balance != proof_data.final_ciphertext {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if confidential_transfer_account.available_balance != proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mfinal_ciphertext {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":20119,"byte_end":20144,"line_start":525,"line_end":525,"column_start":23,"column_end":48,"is_primary":true,"text":[{"text":"        if proof_data.transfer_with_fee_pubkeys.auditor_pubkey","highlight_start":23,"highlight_end":48}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":20119,"byte_end":20119,"line_start":525,"line_end":525,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"        if proof_data.transfer_with_fee_pubkeys.auditor_pubkey","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:525:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if proof_data.transfer_with_fee_pubkeys.auditor_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_with_fee_pubkeys.auditor_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":20460,"byte_end":20485,"line_start":533,"line_end":533,"column_start":14,"column_end":39,"is_primary":true,"text":[{"text":"            .transfer_with_fee_pubkeys","highlight_start":14,"highlight_end":39}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":20460,"byte_end":20460,"line_start":533,"line_end":533,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"            .transfer_with_fee_pubkeys","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:533:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .transfer_with_fee_pubkeys\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            .\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_with_fee_pubkeys\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `fee_parameters` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":21677,"byte_end":21691,"line_start":563,"line_end":563,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"        if u64::from(proof_data.fee_parameters.maximum_fee) != maximum_fee","highlight_start":33,"highlight_end":47}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":21677,"byte_end":21677,"line_start":563,"line_end":563,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"        if u64::from(proof_data.fee_parameters.maximum_fee) != maximum_fee","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `fee_parameters` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:563:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m563\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if u64::from(proof_data.fee_parameters.maximum_fee) != maximum_fee\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m563\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        if u64::from(proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mfee_parameters.maximum_fee) != maximum_fee\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `fee_parameters` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":21756,"byte_end":21770,"line_start":564,"line_end":564,"column_start":37,"column_end":51,"is_primary":true,"text":[{"text":"            || u16::from(proof_data.fee_parameters.fee_rate_basis_points)","highlight_start":37,"highlight_end":51}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":21756,"byte_end":21756,"line_start":564,"line_end":564,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            || u16::from(proof_data.fee_parameters.fee_rate_basis_points)","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `fee_parameters` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:564:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m564\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            || u16::from(proof_data.fee_parameters.fee_rate_basis_points)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m564\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            || u16::from(proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mfee_parameters.fee_rate_basis_points)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22009,"byte_end":22022,"line_start":571,"line_end":571,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22022,"byte_end":22022,"line_start":571,"line_end":571,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:571:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m571\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m571\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22058,"byte_end":22071,"line_start":572,"line_end":572,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.source_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22071,"byte_end":22071,"line_start":572,"line_end":572,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.source_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:572:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m572\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m572\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22182,"byte_end":22195,"line_start":575,"line_end":575,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22195,"byte_end":22195,"line_start":575,"line_end":575,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:575:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m575\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m575\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22231,"byte_end":22244,"line_start":576,"line_end":576,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.source_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22244,"byte_end":22244,"line_start":576,"line_end":576,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.source_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:576:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22483,"byte_end":22508,"line_start":585,"line_end":585,"column_start":25,"column_end":50,"is_primary":true,"text":[{"text":"            &proof_data.transfer_with_fee_pubkeys.source_pubkey,","highlight_start":25,"highlight_end":50}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22483,"byte_end":22483,"line_start":585,"line_end":585,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"            &proof_data.transfer_with_fee_pubkeys.source_pubkey,","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:585:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &proof_data.transfer_with_fee_pubkeys.source_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            &proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_with_fee_pubkeys.source_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22749,"byte_end":22762,"line_start":592,"line_end":592,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22762,"byte_end":22762,"line_start":592,"line_end":592,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:592:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m592\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m592\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22798,"byte_end":22811,"line_start":593,"line_end":593,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.destination_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22811,"byte_end":22811,"line_start":593,"line_end":593,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.destination_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:593:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22932,"byte_end":22945,"line_start":596,"line_end":596,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22945,"byte_end":22945,"line_start":596,"line_end":596,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:596:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m596\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m596\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22981,"byte_end":22994,"line_start":597,"line_end":597,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.destination_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":22994,"byte_end":22994,"line_start":597,"line_end":597,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.destination_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:597:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m597\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m597\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":23396,"byte_end":23421,"line_start":610,"line_end":610,"column_start":25,"column_end":50,"is_primary":true,"text":[{"text":"            &proof_data.transfer_with_fee_pubkeys.destination_pubkey,","highlight_start":25,"highlight_end":50}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":23396,"byte_end":23396,"line_start":610,"line_end":610,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"            &proof_data.transfer_with_fee_pubkeys.destination_pubkey,","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_with_fee_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferWithFeeData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:610:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m610\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &proof_data.transfer_with_fee_pubkeys.destination_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m610\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            &proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_with_fee_pubkeys.destination_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `transfer_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":23799,"byte_end":23815,"line_start":622,"line_end":622,"column_start":23,"column_end":39,"is_primary":true,"text":[{"text":"        if proof_data.transfer_pubkeys.auditor_pubkey","highlight_start":23,"highlight_end":39}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":23799,"byte_end":23799,"line_start":622,"line_end":622,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"        if proof_data.transfer_pubkeys.auditor_pubkey","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:622:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m622\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if proof_data.transfer_pubkeys.auditor_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m622\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_pubkeys.auditor_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24089,"byte_end":24102,"line_start":629,"line_end":629,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24102,"byte_end":24102,"line_start":629,"line_end":629,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:629:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m629\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m629\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24138,"byte_end":24151,"line_start":630,"line_end":630,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.source_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24151,"byte_end":24151,"line_start":630,"line_end":630,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.source_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:630:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24262,"byte_end":24275,"line_start":633,"line_end":633,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24275,"byte_end":24275,"line_start":633,"line_end":633,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:633:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m633\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m633\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24311,"byte_end":24324,"line_start":634,"line_end":634,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.source_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24324,"byte_end":24324,"line_start":634,"line_end":634,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.source_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:634:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.source_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"no field `transfer_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24563,"byte_end":24579,"line_start":643,"line_end":643,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"            &proof_data.transfer_pubkeys.source_pubkey,","highlight_start":25,"highlight_end":41}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24563,"byte_end":24563,"line_start":643,"line_end":643,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"            &proof_data.transfer_pubkeys.source_pubkey,","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:643:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &proof_data.transfer_pubkeys.source_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            &proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_pubkeys.source_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24820,"byte_end":24833,"line_start":650,"line_end":650,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24833,"byte_end":24833,"line_start":650,"line_end":650,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:650:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24869,"byte_end":24882,"line_start":651,"line_end":651,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.destination_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":24882,"byte_end":24882,"line_start":651,"line_end":651,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_lo.destination_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_lo` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:651:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m651\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_lo.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m651\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_lo\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":25003,"byte_end":25016,"line_start":654,"line_end":654,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":25016,"byte_end":25016,"line_start":654,"line_end":654,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.commitment,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:654:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.commitment,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":25052,"byte_end":25065,"line_start":655,"line_end":655,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.destination_handle,","highlight_start":24,"highlight_end":37}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":25065,"byte_end":25065,"line_start":655,"line_end":655,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"            proof_data.ciphertext_hi.destination_handle,","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m: attempted to take value of method `ciphertext_hi` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:655:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proof_data.ciphertext_hi.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            proof_data.ciphertext_hi\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m.destination_handle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"no field `transfer_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":25232,"byte_end":25248,"line_start":661,"line_end":661,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"            &proof_data.transfer_pubkeys.destination_pubkey,","highlight_start":25,"highlight_end":41}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":25232,"byte_end":25232,"line_start":661,"line_end":661,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"            &proof_data.transfer_pubkeys.destination_pubkey,","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `transfer_pubkeys` on type `&solana_zk_token_sdk::instruction::TransferData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:661:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m661\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &proof_data.transfer_pubkeys.destination_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m661\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            &proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mtransfer_pubkeys.destination_pubkey,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `withdraw_withheld_authority_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":38245,"byte_end":38279,"line_start":991,"line_end":991,"column_start":19,"column_end":53,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_pubkey","highlight_start":19,"highlight_end":53}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":38245,"byte_end":38245,"line_start":991,"line_end":991,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_pubkey","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `withdraw_withheld_authority_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:991:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m991\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.withdraw_withheld_authority_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m991\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mwithdraw_withheld_authority_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `destination_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":38566,"byte_end":38584,"line_start":998,"line_end":998,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"    if proof_data.destination_pubkey != destination_confidential_transfer_account.encryption_pubkey","highlight_start":19,"highlight_end":37}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":38566,"byte_end":38566,"line_start":998,"line_end":998,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.destination_pubkey != destination_confidential_transfer_account.encryption_pubkey","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `destination_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:998:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.destination_pubkey != destination_confidential_transfer_account.encryption_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mdestination_pubkey != destination_confidential_transfer_account.encryption_pubkey\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `withdraw_withheld_authority_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":38833,"byte_end":38871,"line_start":1004,"line_end":1004,"column_start":19,"column_end":57,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_ciphertext","highlight_start":19,"highlight_end":57}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":38833,"byte_end":38833,"line_start":1004,"line_end":1004,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_ciphertext","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `withdraw_withheld_authority_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:1004:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1004\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.withdraw_withheld_authority_ciphertext\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1004\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mwithdraw_withheld_authority_ciphertext\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `destination_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":39333,"byte_end":39355,"line_start":1014,"line_end":1014,"column_start":21,"column_end":43,"is_primary":true,"text":[{"text":"        &proof_data.destination_ciphertext,","highlight_start":21,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":39333,"byte_end":39333,"line_start":1014,"line_end":1014,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        &proof_data.destination_ciphertext,","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `destination_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:1014:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &proof_data.destination_ciphertext,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        &proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mdestination_ciphertext,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `withdraw_withheld_authority_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44042,"byte_end":44076,"line_start":1123,"line_end":1123,"column_start":19,"column_end":53,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_pubkey","highlight_start":19,"highlight_end":53}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44042,"byte_end":44042,"line_start":1123,"line_end":1123,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_pubkey","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `withdraw_withheld_authority_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:1123:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.withdraw_withheld_authority_pubkey\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mwithdraw_withheld_authority_pubkey\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `destination_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44363,"byte_end":44381,"line_start":1130,"line_end":1130,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"    if proof_data.destination_pubkey != destination_confidential_transfer_account.encryption_pubkey","highlight_start":19,"highlight_end":37}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44363,"byte_end":44363,"line_start":1130,"line_end":1130,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.destination_pubkey != destination_confidential_transfer_account.encryption_pubkey","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `destination_pubkey` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:1130:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.destination_pubkey != destination_confidential_transfer_account.encryption_pubkey\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mdestination_pubkey != destination_confidential_transfer_account.encryption_pubkey\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `withdraw_withheld_authority_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44630,"byte_end":44668,"line_start":1136,"line_end":1136,"column_start":19,"column_end":57,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_ciphertext != aggregate_withheld_amount {","highlight_start":19,"highlight_end":57}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44630,"byte_end":44630,"line_start":1136,"line_end":1136,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    if proof_data.withdraw_withheld_authority_ciphertext != aggregate_withheld_amount {","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `withdraw_withheld_authority_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:1136:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if proof_data.withdraw_withheld_authority_ciphertext != aggregate_withheld_amount {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mwithdraw_withheld_authority_ciphertext != aggregate_withheld_amount {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no field `destination_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44997,"byte_end":45019,"line_start":1143,"line_end":1143,"column_start":21,"column_end":43,"is_primary":true,"text":[{"text":"        &proof_data.destination_ciphertext,","highlight_start":21,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `context`, `proof`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs","byte_start":44997,"byte_end":44997,"line_start":1143,"line_end":1143,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        &proof_data.destination_ciphertext,","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"context.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `destination_ciphertext` on type `&solana_zk_token_sdk::instruction::WithdrawWithheldTokensData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macmini/.cargo/registry/src/github.com-1ecc6299db9ec823/spl-token-2022-0.5.0/src/extension/confidential_transfer/processor.rs:1143:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &proof_data.destination_ciphertext,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `context`, `proof`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        &proof_data.\u001b[0m\u001b[0m\u001b[38;5;10mcontext.\u001b[0m\u001b[0mdestination_ciphertext,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"aborting due to 47 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 47 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0061, E0599, E0609, E0615.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0599, E0609, E0615.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
